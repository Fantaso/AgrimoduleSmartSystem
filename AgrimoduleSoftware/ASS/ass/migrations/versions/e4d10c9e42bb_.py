"""empty message

Revision ID: e4d10c9e42bb
Revises:
Create Date: 2018-06-15 18:19:10.021151

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e4d10c9e42bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agrimodulefbtable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('msg', sa.Text(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contactustable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=True),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('phone', sa.String(length=30), nullable=True),
    sa.Column('msg', sa.Text(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('crop',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('_name', sa.String(length=25), nullable=False),
    sa.Column('_variety', sa.String(length=25), nullable=True),
    sa.Column('_family', sa.String(length=25), nullable=True),
    sa.Column('_yield', sa.Float(precision=2), nullable=True),
    sa.Column('_space_x', sa.Float(precision=2), nullable=True),
    sa.Column('_space_y', sa.Float(precision=2), nullable=True),
    sa.Column('_space_z', sa.Float(precision=2), nullable=True),
    sa.Column('_density', sa.Float(precision=2), nullable=True),
    sa.Column('_fruit_quantity', sa.Integer(), nullable=True),
    sa.Column('_fruit_size', sa.Float(precision=2), nullable=True),
    sa.Column('_fruit_weight', sa.Float(precision=2), nullable=True),
    sa.Column('_water', sa.Float(precision=4), nullable=True),
    sa.Column('_nutrient', sa.Float(precision=4), nullable=True),
    sa.Column('_radiation', sa.Float(precision=4), nullable=True),
    sa.Column('_dtg', sa.Integer(), nullable=True),
    sa.Column('_dtm', sa.Integer(), nullable=True),
    sa.Column('_soil_ph_min', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_ph_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_ph_max', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_temp_min', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_temp_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_temp_max', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_humi_min', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_humi_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_humi_max', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_nutrient_min', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_nutrient_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_soil_nutrient_max', sa.Float(precision=2), nullable=True),
    sa.Column('_air_temp_min', sa.Float(precision=2), nullable=True),
    sa.Column('_air_temp_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_air_temp_max', sa.Float(precision=2), nullable=True),
    sa.Column('_air_humi_min', sa.Float(precision=2), nullable=True),
    sa.Column('_air_humi_opt', sa.Float(precision=2), nullable=True),
    sa.Column('_air_humi_max', sa.Float(precision=2), nullable=True),
    sa.Column('_water_needed', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('_name')
    )
    op.create_table('dailyfieldinput',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('daily_pump_on_time', sa.Float(), nullable=True),
    sa.Column('daily_water', sa.Float(), nullable=True),
    sa.Column('daily_energy', sa.Float(), nullable=True),
    sa.Column('avg_air_radiation', sa.Float(), nullable=True),
    sa.Column('avg_air_temperature', sa.Float(), nullable=True),
    sa.Column('avg_air_humidity', sa.Float(), nullable=True),
    sa.Column('avg_air_pressure', sa.Float(), nullable=True),
    sa.Column('avg_soil_temperature', sa.Float(), nullable=True),
    sa.Column('avg_soil_humidity', sa.Float(), nullable=True),
    sa.Column('avg_soil_ph', sa.Float(), nullable=True),
    sa.Column('avg_soil_nutrients', sa.Float(), nullable=True),
    sa.Column('avg_air_radiation_percentage', sa.Float(), nullable=True),
    sa.Column('avg_air_temperature_percentage', sa.Float(), nullable=True),
    sa.Column('avg_air_humidity_percentage', sa.Float(), nullable=True),
    sa.Column('avg_air_pressure_percentage', sa.Float(), nullable=True),
    sa.Column('avg_soil_temperature_percentage', sa.Float(), nullable=True),
    sa.Column('avg_soil_humidity_percentage', sa.Float(), nullable=True),
    sa.Column('avg_soil_ph_percentage', sa.Float(), nullable=True),
    sa.Column('avg_soil_nutrients_percentage', sa.Float(), nullable=True),
    sa.Column('avg_rain', sa.Float(), nullable=True),
    sa.Column('avg_wind', sa.Float(), nullable=True),
    sa.Column('avg_wind_direction', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('newslettertable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('platformfbtable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('msg', sa.Text(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=200), nullable=True),
    sa.Column('birthday', sa.DateTime(timezone=True), nullable=True),
    sa.Column('mobile', sa.String(length=50), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=50), nullable=True),
    sa.Column('zipcode', sa.Integer(), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('email_rec', sa.String(length=50), nullable=True),
    sa.Column('image', sa.String(length=200), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=100), nullable=True),
    sa.Column('current_login_ip', sa.String(length=100), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('default_farm_id', sa.Integer(), nullable=True),
    sa.Column('completed_welcome', sa.Boolean(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('default_farm_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('mobile'),
    sa.UniqueConstraint('username')
    )
    op.create_table('workwithustable',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=True),
    sa.Column('msg', sa.Text(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('farm',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('farm_name', sa.String(length=25), nullable=False),
    sa.Column('farm_location', sa.String(length=20), nullable=True),
    sa.Column('farm_area', sa.Float(precision=2), nullable=True),
    sa.Column('farm_cultivation_process', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('_default', sa.Boolean(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('farm_name')
    )
    op.create_table('pump',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pump_name', sa.String(length=30), nullable=True),
    sa.Column('pump_brand', sa.String(length=25), nullable=True),
    sa.Column('pump_flow_rate', sa.Float(precision=2), nullable=False),
    sa.Column('pump_head', sa.Float(), nullable=False),
    sa.Column('pump_watts', sa.Float(precision=2), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('field',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=25), nullable=False),
    sa.Column('field_cultivation_area', sa.Float(precision=2), nullable=True),
    sa.Column('field_cultivation_start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('field_cultivation_finish_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('field_current_yield', sa.Float(precision=2), nullable=True),
    sa.Column('field_projected_yield', sa.Float(precision=2), nullable=True),
    sa.Column('field_cultivation_state', sa.String(length=20), nullable=True),
    sa.Column('field_cultivation_type', sa.String(length=5), nullable=True),
    sa.Column('field_num_plants', sa.Integer(), nullable=True),
    sa.Column('field_spacing_topology', sa.String(length=20), nullable=True),
    sa.Column('field_water_required_day', sa.Integer(), nullable=True),
    sa.Column('farm_id', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['farm_id'], ['farm.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('agrimodules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=True),
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('lat', sa.Float(precision=8), nullable=True),
    sa.Column('lon', sa.Float(precision=8), nullable=True),
    sa.Column('batt_status', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('crops_field',
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.Column('crop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['crop_id'], ['crop.id'], ),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], )
    )
    op.create_table('agripumps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=True),
    sa.Column('lat', sa.Float(precision=8), nullable=True),
    sa.Column('lon', sa.Float(precision=8), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('_daily_water', sa.Float(precision=3), nullable=True),
    sa.Column('_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('start_hour_per_day', sa.Integer(), nullable=True),
    sa.Column('qty_hour_per_day', sa.Integer(), nullable=True),
    sa.Column('time_per_hour', sa.Float(), nullable=True),
    sa.Column('time_per_day', sa.Float(), nullable=True),
    sa.Column('time_per_cycle', sa.Float(), nullable=True),
    sa.Column('water_per_hour', sa.Integer(), nullable=True),
    sa.Column('water_per_day', sa.Integer(), nullable=True),
    sa.Column('water_per_cycle', sa.Integer(), nullable=True),
    sa.Column('energy_per_hour', sa.Integer(), nullable=True),
    sa.Column('energy_per_day', sa.Integer(), nullable=True),
    sa.Column('energy_per_cycle', sa.Integer(), nullable=True),
    sa.Column('agrimodule_id', sa.Integer(), nullable=True),
    sa.Column('pump_id', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['agrimodule_id'], ['agrimodules.id'], ),
    sa.ForeignKeyConstraint(['pump_id'], ['pump.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('agrisensors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=50), nullable=True),
    sa.Column('lat', sa.Float(precision=8), nullable=True),
    sa.Column('lon', sa.Float(precision=8), nullable=True),
    sa.Column('batt_status', sa.Integer(), nullable=True),
    sa.Column('agrimodule_id', sa.Integer(), nullable=True),
    sa.Column('_time_created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('_time_updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['agrimodule_id'], ['agrimodules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier')
    )
    op.create_table('measurements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('soil_ph', sa.Float(precision=4), nullable=True),
    sa.Column('soil_nutrient', sa.Float(precision=4), nullable=True),
    sa.Column('soil_temp', sa.Float(precision=4), nullable=True),
    sa.Column('soil_humi', sa.Float(precision=4), nullable=True),
    sa.Column('air_temp', sa.Float(precision=4), nullable=True),
    sa.Column('air_humi', sa.Float(precision=4), nullable=True),
    sa.Column('air_pres', sa.Float(precision=4), nullable=True),
    sa.Column('solar_radiation', sa.Float(precision=4), nullable=True),
    sa.Column('batt_status', sa.Integer(), nullable=True),
    sa.Column('lat', sa.Float(precision=8), nullable=True),
    sa.Column('lon', sa.Float(precision=8), nullable=True),
    sa.Column('agrimodule_id', sa.Integer(), nullable=True),
    sa.Column('agripump_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['agrimodule_id'], ['agrimodules.id'], ),
    sa.ForeignKeyConstraint(['agripump_id'], ['agrisensors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('measurements')
    op.drop_table('agrisensors')
    op.drop_table('agripumps')
    op.drop_table('crops_field')
    op.drop_table('agrimodules')
    op.drop_table('field')
    op.drop_table('roles_users')
    op.drop_table('pump')
    op.drop_table('farm')
    op.drop_table('workwithustable')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('platformfbtable')
    op.drop_table('newslettertable')
    op.drop_table('dailyfieldinput')
    op.drop_table('crop')
    op.drop_table('contactustable')
    op.drop_table('agrimodulefbtable')
    # ### end Alembic commands ###
